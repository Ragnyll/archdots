# vim: filetype=bash
alias battery='upower -i /org/freedesktop/UPower/devices/battery_BAT0'
alias cls='clear'
alias conflicts='git diff --name-only --diff-filter=U'
alias compress-vid='ffmpeg -i $1 -vcodec libx265 -crf 28 $2'
alias g++='g++ -std=c++20'
alias gp='git push'
alias gpsu='git push --set-upstream origin $(git branch --show-current)'
alias gti='git' # i suck at typing
alias l='lsd'
alias ls='lsd'
alias ll='lsd -l'
alias lll='lsd -la'
alias music='termusic'
alias mute='amixer -q -D pulse sset Master toggle'
alias mkdir='mkdir -p'
alias pacman='sudo pacman'
alias pacman_installed='comm -23 <(pacman -Qqett | sort) <(pacman -Qqg -g base-devel | sort | uniq)'
alias q='exit'
alias scim='sc-im'
alias sl='ls'
alias sqlite='sqlite3'
alias tor='~/Applications/tor-browser_en-US/Browser/start-tor-browser'
alias vi='nvim'
alias vim='nvim'
alias im='nvim'
alias whiteboard='lorien'
alias yay_installed='comm -23 <(yay -Qqett | sort) <(yay -Qqg -g base-devel | sort | uniq)'
alias ytdlp='yt-dlp'
alias cg-test='cargo nextest run'
alias cg='cargo'
alias mbsync='mbsync -c ~/.config/mbsync/mbsyncrc'
alias mutt='neomutt -F ~/.config/neomutt/neomuttrc'
alias jo='joshuto'

#!/bin/zsh

function markdowntodocx() {
    # $1 input markdown file name
    # $2 output pad file name
    [[ $1 == "-h" ]] \
        && printf "USAGE\nmarkdowntodocx INPUTMARKDOWNFILE OUTPUTDOCXFILE\n" \
        || pandoc -s -V geometry:margin=1in  -o $2 $1
}

function markdowntopdf() {
    # $1 input markdown file name
    # $2 output pad file name
    [[ $1 == "-h" ]] \
        && printf "USAGE\nmarkdowntopdf INPUTMARKDOWNFILE OUTPUTPDFFILE\n" \
        || pandoc -s -V geometry:margin=1in  -o $2 $1
}

function pbcopy {
    # copies to clipboard like (the more egronomic) osx command but without the pipe
    # $1 path to file
    xclip -selection clipboard < $1
}

function vidtogif() {
    # converts a video to a gif of desired size (defualting to 1080)
    # $1 : video's input path
    # $2 : output gif path
    # $3 : skip seconds. How many seconds to skip from the head of the video
    # $4 : duration. How long the gif will last
    # $5 optional scale flag
    scale="1080"
    [[ $# -ge 4 ]] && ffmpeg -ss $3 \
        -t $4 \
        -i $1 \
        -vf "fps=10,scale=$scale:-1:flags=lanczos,split[s0][s1];[s0]palettegen[p];[s1][p]paletteuse" \
        -loop 0 $2 || \
    printf "vidtogif: converts videos to gif files

Usage:
  vidtogif input_file output_path skip_s duration [scale]\n"
}
